execUC :: $\forall$ ... . $X_{\mathsf{z}} \multimap X_{\mathsf{p}} \otimes X_{\mathsf{q}} \multimap X_{\mathsf{f}} \multimap X_{\mathsf{a}} \multimap \tyBang{\tyNat} \multimap \tyBang{[\tyBit]} \multimap \tyBang{\keyword{Crupt}} \multimap_m \tyBang{\tyBit}$ 
let execUC z (p,q) f a k !r crupt =
  $\nu$ (rZ2P, wZ2P), (rP2Z, wP2Z)
  , (rZ2Q, wZ2Q), (rQ2Z, wQ2Z)
  , (rP2F, wP2F), (rF2P, wF2P)
  , (rQ2F, wQ2F), (rF2Q, wF2Q)
  , (rF2A, wF2A), (rA2F, wA2F)
  , (rA2Z, wA2Z), (rZ2A, wZ2A)
  , (rP2A, wP2A), (rA2P, wA2P)
  , (rQ2A, wQ2A), (rA2Q, wA2Q)
  , (rP2Q, wP2Q), (rQ2P, wQ2P)    
  . let wrapperP p !crupt toZ frZ toF frF toA frA toP frP k bits =
      if crupt == CruptP then
	   loop frZ !($\lambda$ _ . error "Z cannot write to corrupted party.")
	$\xFork$ fwd frF toA
	$\xFork$ fwd frP toA    
	$\xFork$ fwd frA toF
      else
	p toZ frZ toF frF toP frP k bits in
    let wrapperP p !crupt toZ frZ toF frF toA frA toP frP k bits =
      if crupt == CruptQ then
	   loop frZ !($\lambda$ _ . error "Z cannot write to corrupted party.")
	$\xFork$ fwd frF toA
	$\xFork$ fwd frP toA    
	$\xFork$ fwd frA toF
      else
	p toZ frZ toF frF toP frP k bits in       
    let (rf,ra,rp,rq,rz) = splitBits5 r in
    $\ \ \ \,$ f crupt !wF2P rP2F !wF2Q rQ2F !wF2A rA2F k !rf
    $\xFork$ a crupt !wA2Z rZ2A !wA2F rF2A !wA2P rP2A !wA2Q rQ2A k !ra
    $\xFork$ wrapperP p crupt !wP2Z rZ2P !wP2F rF2P !wP2A rA2P !wP2Q rQ2P k !rp
    $\xFork$ wrapperQ q crupt !wQ2Z rZ2Q !wQ2F rF2Q !wQ2A rA2Q !wQ2P rP2Q k !rq
    $\xFork$ z !wZ2P rP2Z !wZ2Q rQ2Z !wZ2A rA2Z k !rz