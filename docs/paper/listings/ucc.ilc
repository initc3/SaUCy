committer :: $\forall$ ... . $\tyNat -> [\tyBit] -> \cdots \multimap \tyUnit$
let committer k bits toZ toF toQ frZ frF frQ =
  let $($!(Commit b), frZ$)$= rd frZ in
    wr GetCRS $->$ toF ;
    let $($!(PublicStrings $\sigma$ $\mathsf{pk}_0 \mathsf{pk}_1$), frF$)$ = rd frF in
    let r = take k bits in 
    let x = if b == 0 then prg $\mathsf{pk}_0$ r
	  $\,$else xors (prg $\mathsf{pk}_1$ r) $\sigma$ in
      wr Commit' x $->$ toQ ;
      let $($!Open, frZ$)$= rd frZ in
        wr (Open' b r) $->$ toQ

receiver :: $\forall$ ... . $\tyNat -> [\tyBit] -> \cdots \multimap \tyUnit$
let receiver k bits toZ toF toP frZ frF frP =
  let $($!(Commit' x), frP$)$ = rd frP in
    wr GetCRS $->$ toF ;
    let $($!(PublicStrings $\sigma$ $\mathsf{pk}_0 \mathsf{pk}_1$), frF$)$ = rd frF in    
      wr Receipt $->$ toZ ;
      let $($!(Open' b r), frP$)$ = rd frP in
        if (b == 0 && x == prg $\mathsf{pk}_0$ r) ||
	  (b == 1 && x == xors (prg $\mathsf{pk}_1$ r) $\sigma$)
        then wr (Opened b) $->$ toZ
	else error "Cannot occur in honest case."
