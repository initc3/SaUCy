let discardingF ... =
  loop frP !($\lambda$ m . wr m $->$ toA;
    letrec f (frA, frP) = 
	    (let (!Ok, frA) = rd frA in
	    wr m $->$ toQ;
	    (frA, frP))
         $\oplus$ (let (_, frP) = rd frP in  // return to sender
	   wr Discard $->$ toP;
	   (frA, frP))
  )
