let simulator !crupt !toZ frZ !toF frF !toP frP !toQ frQ !k !r =
  let rref = ref r in
  let ($\mathsf{pk}_0$,$\mathsf{td}_0$) = kgen k in
  let ($\mathsf{pk}_1$,$\mathsf{td}_1$) = kgen k in  
  let $\mathsf{r}_0$ = sample k rref in
  let $\mathsf{r}_1$ = sample k rref in
  let $\sigma$ = xors (prg $\mathsf{pk}_0$ $\mathsf{r}_0$) (prg $\mathsf{pk}_1$ $\mathsf{r}_1$) in
  let b = ref Nothing in
    match crupt with
    | CruptP $=>$
      let (!GetCRS, frZ) = rd frZ in
	wr (X2Z (PublicStrings $\sigma$ $\mathsf{pk}_0$ $\mathsf{pk}_1$)) $->$toZ ;
	let (!(A2P (Commit' y)), frZ) = rd frZ in
	  if check $\mathsf{td}_0$ $\mathsf{pk}_0$ y then
	    wr (Commit 0) $->$ toP ; set b := Just 0
	  else
	    if check $\mathsf{td}_1$ $\mathsf{pk}_1$ (xors y $\sigma$) then
	      wr (Commit 1) $->$ toF ; set b := Just 1
	    else
	      error "Fail"
	  let (!(A2P (Open b' y')), frZ) = rd frZ in
	    if y == y' && Just b' == @b then wr Open $->$ toP
	    else error "TODO: Decommit incorrectly"
    | CruptQ $=>$
      let (!GetCRS, frZ) = rd frZ in
	wr (X2Z (PublicStrings $\sigma$ $\mathsf{pk}_0$ $\mathsf{pk}_1$)) $->$ toZ ;  
	let (!Receipt, frQ) = rd frQ in
	let y = prg $\mathsf{pk}_0$ $\mathsf{r}_0$ in
	  wr (X2Z (Commit' y)) $->$ toZ ;
	  let (!(Opened b'), frQ) = rd frQ in
	    if (b' == 0) then
	      !(wr (X2Z (Opened' $\mathsf{r}_0$)) $->$ toZ)
	    else
	      !(wr (X2Z (Opened' $\mathsf{r}_1$)) $->$ toZ)
    | CruptNone $=>$ error "Fail"
